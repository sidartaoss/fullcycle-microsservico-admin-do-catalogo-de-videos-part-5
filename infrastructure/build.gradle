buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.flywaydb.flyway' version '9.21.2'
}

group = 'com.fullcycle.admin.catalogo.infrastructure'

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '2.26.1'

    implementation group: 'com.google.guava', name: 'guava', version: '32.1.2-jre'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation('mysql:mysql-connector-java:8.0.33')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation 'org.flywaydb:flyway-core'
    testImplementation('org.flywaydb:flyway-mysql')

    testImplementation 'org.springframework.amqp:spring-rabbit-test:2.4.15'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation('org.testcontainers:testcontainers:1.19.0')
    testImplementation('org.testcontainers:mysql:1.19.0')
    testImplementation('org.testcontainers:junit-jupiter:1.19.0')
    testImplementation project(path: ':application')

    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:33306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
    cleanDisabled = false
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }
        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}